---
version: "3"

includes:
  changelog: ./provision/task/changelog.yml
  confluence: ./provision/task/confluence.yml
  python: ./provision/task/python.yml
  yarn: ./provision/task/yarn.yml
  git: ./provision/task/git.yml
  docs: ./provision/task/docs.yml
  docker: ./provision/task/docker.yml
  version: ./provision/task/version.yml
  plantuml: ./provision/task/plantuml.yml
  prettier: ./provision/task/prettier.yml
  sonar: ./provision/task/sonar.yml
  coursier: ./provision/task/coursier.yml
  go: ./provision/task/go.yml
  diagrams: ./provision/diagrams/Taskfile.yml
  terraform: ./provision/task/terraform.yml

env:
  DOCKER:
    sh: docker --version 2> /dev/null || echo "not exist"
  PYTHON:
    sh: python --version 2> /dev/null || echo "not exist"
  GO:
    sh: go version 2> /dev/null || echo "not exist"
  NODE:
    sh: node --version 2> /dev/null || echo "not exist"
  APP_TAG:
    sh: git describe --tags $(git rev-list --tags --max-count=1) 2> /dev/null || echo "0.0.0"
  README_YAML: provision/generators/README.yaml
  README_TEMPLATE: provision/templates/README.tpl.md
  README_INCLUDES: file://

dotenv:
  - .env

vars:
  PROJECT_NAME: spring-boot-poc-opentelemetry
  ORGANIZATION: luismayta
  DOCKER_PLATFORM: linux/amd64
  REVIEWERS: luismayta
  PYTHON_VERSION: 3.11.5
  NODE_VERSION: 18.18.2
  JAVA_VERSION: 21.0.0
  TERRAFORM_VERSION: 1.8.5
  GIT_IGNORES: python,node,go,zsh,sonar,terraform,linux,java,intellij+all,gradle,maven
  GOLANGCI_VERSION: 1.42.0
  README_FILE: README.md
  GIT_IGNORES_CUSTOM: |
    bin
    .scannerwork
    .secrets
    public
    TMP_CHANGELOG.md
    .task
    .terraform.lock.hcl
    *.lock.hcl
    *.lock
    *.zip
    *.iml
    .external_modules
    .pmd
    application-local.yml

tasks:
  default:
    deps:
      - task: check
    cmds:
      - cmd: echo Application {{.PROJECT_NAME}}
        silent: true
      - task: version:default
      - task: summary
      - cmd: task -l
    silent: true

  summary:
    desc: "Summary information"
    cmds:
      - echo Go available {{.GO}}
      - echo Python available {{.PYTHON}}
      - echo Docker available {{.DOCKER}}
      - echo Node available {{.NODE}}
    silent: true

  check:
    desc: "Check all dependencies"
    deps:
      - python:check
      - changelog:check
      - git:check
      - docs:check
      - yarn:check
      - go:check
      - coursier:check

  readme:
    run: once
    desc: Generate Readme
    silent: true
    cmds:
      - >-
        gomplate --file {{.README_TEMPLATE}}
        --out {{.README_FILE}}
        --datasource config={{.README_YAML}}
        --datasource includes={{.README_INCLUDES}}
      - task: prettier

  prettier:
    run: once
    desc: Execute prettier files
    cmds:
      - task: prettier:all

  upgrade:
    desc: Execute upgrade packages
    cmds:
      - poetry update
      - poetry run pre-commit autoupdate

  setup:
    desc: Setup dependences of project
    cmds:
      - >-
        [ -e ".env" ] || cp -rf .env.example .env
      - task: python:setup
      - task: python:precommit
      - task: git:setup
      - task: coursier:setup
      - ./gradlew clean build

  build:
    desc: build gradle
    cmds:
      - ./gradlew clean build

  start:
    desc: Start spring boot
    cmds:
      - gradle bootRun -Dspring.profiles.active=local

  environment:
    desc: Setup environment of project
    cmds:
      - task: python:environment
